{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bogda\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\2dolist-master\\\\src\\\\ToDoList\\\\ToDoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ToDoList.css'; // Make sure the file path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskManager() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTaskText, setNewTaskText] = useState('');\n  useEffect(() => {\n    const storedTasks = localStorage.getItem('tasks');\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n  }, []);\n  const saveTasksToLocalStorage = updatedTasks => {\n    localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n  };\n  const addTask = () => {\n    if (newTaskText.trim() === '') {\n      return;\n    }\n    const newTask = {\n      id: Date.now(),\n      text: newTaskText\n    };\n    const updatedTasks = [...tasks, newTask];\n    setTasks(updatedTasks);\n    saveTasksToLocalStorage(updatedTasks);\n    setNewTaskText('');\n  };\n  const deleteTask = taskId => {\n    const updatedTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(updatedTasks);\n    saveTasksToLocalStorage(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.text, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTaskText,\n      onChange: e => setNewTaskText(e.target.value),\n      className: \"task-input\",\n      placeholder: \"Enter a new task...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      className: \"add-button\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskManager, \"C0xvBMzDBNlXma/BxQeTgJ0hnN0=\");\n_c = TaskManager;\n;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TaskManager","_s","tasks","setTasks","newTaskText","setNewTaskText","storedTasks","localStorage","getItem","JSON","parse","saveTasksToLocalStorage","updatedTasks","setItem","stringify","addTask","trim","newTask","id","Date","now","text","deleteTask","taskId","filter","task","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/bogda/OneDrive/Рабочий стол/2dolist-master/src/ToDoList/ToDoList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ToDoList.css'; // Make sure the file path is correct\n\nexport default function TaskManager() {\n    const [tasks, setTasks] = useState([]);\n    const [newTaskText, setNewTaskText] = useState('');\n\n    useEffect(() => {\n        const storedTasks = localStorage.getItem('tasks');\n        if (storedTasks) {\n            setTasks(JSON.parse(storedTasks));\n        }\n    }, []);\n\n    const saveTasksToLocalStorage = (updatedTasks) => {\n        localStorage.setItem('tasks', JSON.stringify(updatedTasks));\n    };\n\n    const addTask = () => {\n        if (newTaskText.trim() === '') {\n            return;\n        }\n\n        const newTask = {\n            id: Date.now(),\n            text: newTaskText,\n        };\n\n        const updatedTasks = [...tasks, newTask];\n        setTasks(updatedTasks);\n        saveTasksToLocalStorage(updatedTasks);\n        setNewTaskText('');\n    };\n\n    const deleteTask = (taskId) => {\n        const updatedTasks = tasks.filter((task) => task.id !== taskId);\n        setTasks(updatedTasks);\n        saveTasksToLocalStorage(updatedTasks);\n    };\n\n    return (\n        <div className=\"task-manager\">\n            <h2>Task List</h2>\n            <ul className=\"task-list\">\n                {tasks.map((task) => (\n                    <li key={task.id}>\n                        {task.text}\n                        <button onClick={() => deleteTask(task.id)}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n            <input\n                type=\"text\"\n                value={newTaskText}\n                onChange={(e) => setNewTaskText(e.target.value)}\n                className=\"task-input\"\n                placeholder=\"Enter a new task...\"\n            />\n            <button onClick={addTask} className=\"add-button\">Add Task</button>\n        </div>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}