{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bogda\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\2dolist-master\\\\src\\\\ToDoList\\\\ToDoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './todoliststyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [taskText, setTaskText] = useState(\"\");\n  useEffect(() => {\n    const storedTasks = localStorage.getItem('tasks');\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n  }, []);\n  const saveTasksToLocalStorage = tasks => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  };\n  const handleAddTask = () => {\n    if (taskText.trim() === '') {\n      return;\n    }\n    const newTask = {\n      id: Date.now(),\n      text: taskText\n    };\n    const updatedTasks = [...tasks, newTask];\n    setTasks(updatedTasks);\n    saveTasksToLocalStorage(updatedTasks);\n    setTaskText('');\n  };\n  const handleDeleteTask = taskId => {\n    const updatedTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(updatedTasks);\n    saveTasksToLocalStorage(updatedTasks);\n  };\n  const containerStyle = {\n    backgroundColor: 'purple',\n    color: 'white',\n    padding: '20px',\n    borderRadius: '10px'\n  };\n  const addButtonStyle = {\n    backgroundColor: 'purple',\n    color: 'white',\n    borderRadius: '5px'\n  };\n  const taskListStyle = {\n    listStyleType: 'none',\n    padding: '0',\n    display: 'flex',\n    // Use flexbox for task list\n    flexDirection: 'column',\n    // Stack columns vertically\n    gap: '10px' // Add space between columns\n  };\n\n  const taskItemStyle = {\n    backgroundColor: 'pink',\n    padding: '10px',\n    borderRadius: '5px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  };\n  const deleteButtonStyle = {\n    backgroundColor: 'purple',\n    color: 'white',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: 'white'\n      },\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      style: taskListStyle,\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: taskItemStyle,\n        children: [task.text, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTask(task.id),\n          style: deleteButtonStyle,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: taskText,\n      onChange: e => setTaskText(e.target.value),\n      className: \"task-input\",\n      style: {\n        backgroundColor: 'pink',\n        borderRadius: '5px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      className: \"add-button\",\n      style: addButtonStyle,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_s(TodoList, \"079IiNd7VpHo+oOptSprDeacuEI=\");\n_c = TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TodoList","_s","tasks","setTasks","taskText","setTaskText","storedTasks","localStorage","getItem","JSON","parse","saveTasksToLocalStorage","setItem","stringify","handleAddTask","trim","newTask","id","Date","now","text","updatedTasks","handleDeleteTask","taskId","filter","task","containerStyle","backgroundColor","color","padding","borderRadius","addButtonStyle","taskListStyle","listStyleType","display","flexDirection","gap","taskItemStyle","justifyContent","alignItems","deleteButtonStyle","border","cursor","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/bogda/OneDrive/Рабочий стол/2dolist-master/src/ToDoList/ToDoList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './todoliststyle.css';\n\nexport default function TodoList() {\n    const [tasks, setTasks] = useState([]);\n    const [taskText, setTaskText] = useState(\"\");\n\n    useEffect(() => {\n        const storedTasks = localStorage.getItem('tasks');\n        if (storedTasks) {\n            setTasks(JSON.parse(storedTasks));\n        }\n    }, []);\n\n    const saveTasksToLocalStorage = (tasks) => {\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    const handleAddTask = () => {\n        if (taskText.trim() === '') {\n            return;\n        }\n\n        const newTask = {\n            id: Date.now(),\n            text: taskText,\n        };\n\n        const updatedTasks = [...tasks, newTask];\n        setTasks(updatedTasks);\n        saveTasksToLocalStorage(updatedTasks);\n        setTaskText('');\n    };\n\n    const handleDeleteTask = (taskId) => {\n        const updatedTasks = tasks.filter((task) => task.id !== taskId);\n        setTasks(updatedTasks);\n        saveTasksToLocalStorage(updatedTasks);\n    };\n\n    const containerStyle = {\n        backgroundColor: 'purple',\n        color: 'white',\n        padding: '20px',\n        borderRadius: '10px',\n    };\n\n    const addButtonStyle = {\n        backgroundColor: 'purple',\n        color: 'white',\n        borderRadius: '5px',\n    };\n\n    const taskListStyle = {\n        listStyleType: 'none',\n        padding: '0',\n        display: 'flex', // Use flexbox for task list\n        flexDirection: 'column', // Stack columns vertically\n        gap: '10px', // Add space between columns\n    };\n\n    const taskItemStyle = {\n        backgroundColor: 'pink',\n        padding: '10px',\n        borderRadius: '5px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    };\n\n    const deleteButtonStyle = {\n        backgroundColor: 'purple',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer',\n    };\n\n    return (\n        <div className=\"todo-container\" style={containerStyle}>\n            <h2 style={{ color: 'white' }}>Tasks</h2>\n            <ul className=\"task-list\" style={taskListStyle}>\n                {tasks.map((task) => (\n                    <li key={task.id} style={taskItemStyle}>\n                        {task.text}\n                        <button\n                            onClick={() => handleDeleteTask(task.id)}\n                            style={deleteButtonStyle}\n                        >\n                            Delete\n                        </button>\n                    </li>\n                ))}\n            </ul>\n            <input\n                type=\"text\"\n                value={taskText}\n                onChange={(e) => setTaskText(e.target.value)}\n                className=\"task-input\"\n                style={{ backgroundColor: 'pink', borderRadius: '5px' }}\n            />\n            <button onClick={handleAddTask} className=\"add-button\" style={addButtonStyle}>\n                Add Task\n            </button>\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}